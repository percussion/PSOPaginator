<project name="PSO Paginator" default="dist" basedir=".">
	<description>
       PSO Paginator code
    </description>
	<!-- set global properties for this build -->
    
	<property environment="env"/>
	<!-- base directory of Rhythmyx installation --> 
	<property name="rx.home" location="${env.RHYTHMYX_HOME}"/>
	<!-- name of Rhythmyx Service -->
	<property name="rx.service" value="${env.RHYTHMYX_SERVICE}"/>
	<!-- base of Axis Path -->
	<property name="axis_home" location="${env.AXIS_HOME}"/> 
	<!-- name of our output jar --> 
	<property name="jarname" value="PSOPaginator.jar" />	
	<property name="tarname" value="psopaginator.tar.gz" />
	<!-- name of our distribution zip -->
	<property name="distfile" value="PSOPaginator.zip" />
	
	<!-- Spring configuration for ContentListServlet -->
	<property name="spring.contentlist" value="paginatorContentListServlet.xml"/>
	
	<property name="rx.lib" 
	value="${rx.home}/AppServer/server/rx/deploy/rxapp.ear/rxapp.war/WEB-INF/lib"/>
	<property name="rx.spring"
	value="${rx.home}/AppServer/server/rx/deploy/rxapp.ear/rxapp.war/WEB-INF/config/user/spring"/>
    <property name="jboss.lib" 
	value="${rx.home}/AppServer/server/rx/lib" />
	<!-- relative paths -->
	<property name="src" location="src"/>
	<property name="lib" location="lib"/>
	<property name="bin" location="bin"/>	
	<property name="apidoc" location="apidoc" />
	<!-- used for running Windows commands --> 
	<property name="comspec" location="${env.ComSpec}"/>
	<property name="cdrive" location="${env.USERPROFILE}"/> 
	<!-- Rhythmyx classpath  --> 
	<path id="rx.class.path"> 
		 <fileset dir="${rx.lib}">
		 	<include name="**.jar"/>
		 	<exclude name="${jarname}"/>
		 </fileset>		    	
		 <fileset dir="${lib}" /> 
		 <fileset dir="${jboss.lib}" /> 
	</path>
	

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
	</target>
	
	
	<target name="compile" description="compile the source ">
		<!-- Compile the java code from ${src} into ${bin} -->
		<javac srcdir="${src}" destdir="${bin}" debug="true" source="1.5" classpathref="rx.class.path" />
		<copy todir="${bin}">
    		<fileset dir="${src}">
      			<include name="**/*.xml"/>
    			<include name="**/*.properties" />
    		</fileset>
  		</copy>
	</target>
	
	<target name="javadoc" depends="compile">
		<mkdir dir="apidoc"/>
		<javadoc destdir="apidoc" protected="true" use="yes" 
		windowtitle="${ant.project.name}">
			<packageset dir="${src}" defaultexcludes="yes">
				<include name="com/percussion/pso/**"/>	
			</packageset>
			<classpath refid="rx.class.path"/>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
			<link href="file:///d:/RxRhino/Docs/Rhythmyx/Javadocs" />
		</javadoc>
	</target>
	
	<target name="jarbuilder" description="just build the jar, no server">
	    <delete file="${bin}/log4j.properties" />
		<propertyfile file="${bin}/build.properties">
			<entry key="build.number" value="${build.number}"/>
			<entry key="build.date" type="date" pattern="EEEE MMM dd yyyy" value="now"/>
    	</propertyfile>
		<jar jarfile="${jarname}" basedir="bin">
			<include name="org/**" />
			<include name="javax/**" />	
			<include name="com/percussion/pso/**"/>
			<exclude name="log4j.properties" /> 
			<include name="build.properties" /> 
			<!-- <include name="readme.txt" /> -->
		</jar>
	</target>

	<target name="installExtensions">
		<java classname="com.percussion.util.PSExtensionInstallTool" fork="true">
		    <arg value="${rx.home}" />
			<arg value="${basedir}" />
			<classpath>
				<fileset dir="${rx.lib}"/>
			    <fileset dir="${rx.home}/AppServer/lib/endorsed" />
				<fileset dir="${rx.home}/AppServer/server/rx/lib" />
			</classpath>			
		</java>     
	</target>

	
	<target name="testbuild" depends="compile" description="build for local test">		
		<echo>Stopping ${rx.service}</echo>
		<exec executable="net.exe" failonerror="false">
			<arg line="stop ${rx.service}"/>
			<env key="COMSPEC" path="${comspec}"/>
		</exec>
		<property name="build.number" value="test build" /> 
		<antcall target="jarbuilder"/>
		<copy file="${jarname}" todir="${rx.lib}" verbose="true" />
		<copy file="${lib}/PSOToolkit60.jar" todir="${rx.lib}" verbose="true" />
		<copy todir="${rx.spring}" verbose="true">
			<fileset dir="spring" />
		</copy>
		<echo>waiting for shutdown...</echo>
	    <sleep seconds="15" /> 
		<delete file="${rx.home}/AppServer/server/rx/log/server.log" />
		<echo>Restarting ${rx.service}</echo>
		<exec executable="net.exe" failonerror="true">
			<arg line="start ${rx.service}"/>
			<env key="COMSPEC" path="${comspec}"/>
		</exec>
	</target>
	<target name="dist" depends="init,compile" description="generate the distribution">
		<buildnumber/>
		<antcall target="jarbuilder"/>
		<antcall target="javadoc" /> 
		<zip destfile="${distfile}">						
			<zipfileset dir="." includes="${jarname}" />
			<zipfileset dir="${lib}" includes="PSOToolkit60.jar" prefix="lib" />
			<zipfileset dir="Rx_Resources_Ephox/rx_resources" 
				prefix="Rx_Resources_Ephox/rx_resources"/>
			<zipfileset dir="spring"  prefix="spring" />
			<fileset dir="." includes="readme.txt, build.number" />
			<fileset dir="." includes="deploy.xml *.xslt"/>
			<fileset dir="." includes="Extensions.xml" /> 
			<zipfileset dir="${apidoc}" prefix="javadoc"/>			
			<!--<fileset dir="Rhythmyx" includes="**"/>-->
		</zip>			
		
		<tar destfile="${tarname}" compression="gzip">
			<tarfileset dir="." includes="${jarname}" mode="755" />
			<tarfileset dir="${lib}" includes="PSOToolkit60.jar" prefix="lib"  mode="755" />
			<tarfileset dir="Rx_Resources_Ephox/rx_resources" 
					prefix="Rx_Resources_Ephox/rx_resources" mode="644"/>
			<tarfileset dir="spring"  prefix="spring" mode="644" />
		    <tarfileset dir="." includes="readme.txt, build.number"  mode="644" />
			<tarfileset dir="." includes="deploy.xml *.xslt" mode="644" />
			<tarfileset dir="." includes="Extensions.xml" mode="644" />
	    </tar>
	</target>
	
	
	<target name="clean" description="clean up">
		<delete dir="${bin}"/>
		<mkdir dir="${bin}"/>
	</target>
</project>
